<!-- index 首页-->
<template>
  <view class='page-container' style="min-height:{{systemInfo.windowHeight}}px">
    <view class="header-container">
      <view wx:if="{{cityName==='定位中...'}}" class="button">{{cityName}}<i class="iconfont icon-point"></i></view>
      <picker wx:else bindchange="bindCityChange" value="{{cityNameIdx}}" range-key="orgName" range="{{cityList}}">
          <view class="picker">
            {{cityList[cityNameIdx].orgName}}
            <i class="iconfont icon-point"></i>
          </view>
        </picker>
      <view class="search-box">
        <view class="search-content" @tap="goSearch">
          <i class="iconfont icon-search"></i>
          <text class="h6 placeholder">搜索</text>
        </view>
      </view>
    </view>
    <swiper class="swiper" indicator-active-color="{{swiperOpts.indicatorActiveColor}}" indicator-dots="{{swiperOpts.indicatorDots}}" autoplay="{{swiperOpts.autoplay}}" interval="{{swiperOpts.interval}}" duration="{{swiperOpts.duration}}" circular="true">
      <block wx:for="{{adList}}" wx:key="key">
        <swiper-item>
          <image src="{{item.image}}" lazy-load="true" class="slide-image" @tap.stop="goToAdvert({{item.url}})" />
        </swiper-item>
      </block>
    </swiper>
    <view class="nav-list">
      <view class="navigate" @tap="search('')">
        <image src="{{images[0]}}" class="nav-icon"></image>
        <view class="nav-text">体验课</view>
      </view>
      <view class="navigate" @tap="search('')">
        <image src="{{images[1]}}" class="nav-icon"></image>
        <view class="nav-text">课程专区</view>
      </view>
      <view class="navigate" @tap="search(热门活动)">
        <image src="{{images[2]}}" class="nav-icon"></image>
        <view class="nav-text">热门活动</view>
      </view>
      <view class="navigate" @tap="search(推荐课程)">
        <image src="{{images[3]}}" class="nav-icon"></image>
        <view class="nav-text">推荐课程</view>
      </view>
      <navigator class="navigate" url="/pages/course-list?type=2">
        <image src="{{images[4]}}" class="nav-icon"></image>
        <view class="nav-text">个人课程</view>
      </navigator>
      <view class="navigate">
        <image src="{{images[5]}}" class="nav-icon"></image>
        <view class="nav-text">在线客服</view>
        <button open-type="contact" class="button" @tap="isCheckContact"></button>
      </view>
      <view class="navigate" @tap="goOtherPorgram(0)">
        <image src="{{images[6]}}" class="nav-icon"></image>
        <view class="nav-text">相关赛事</view>
      </view>
      <view class="navigate" @tap="goOtherPorgram(1)">
        <image src="{{images[7]}}" class="nav-icon"></image>
        <view class="nav-text">五星官网</view>
      </view>
    </view>
    <view class="crumbs h4">推荐商品</view>
    <discover :list.sync="discoverList"></discover>
    <view class="h5 bottom-line" wx:if="{{showLine}}"><text class="dash"></text><text>我是有底线的</text><text class="dash"></text></view>
  </view>
</template>

<script>
  import wepy from 'wepy';
  import api from '@/api/api'
  import tip from '@/utils/tip'
  import Discover from '@/components/discover'
  import {
    getStore
  } from 'wepy-redux';
  const QQMapWX = require('qqmap-wx-jssdk');
  export default class Index extends wepy.page {
    config = {
      navigationBarTitleText: '五星体育运动商城',
    };
    data = {
      images: ['../static/images/nav1.png', '../static/images/nav2.png', '../static/images/nav3.png', '../static/images/nav4.png', '../static/images/nav5.png', '../static/images/msg.png', '../static/images/video.png', '../static/images/home.png'],
      windowHeight: null,
      swiperOpts: {
        indicatorDots: true,
        autoplay: true,
        interval: 3000,
        duration: 1000,
        indicatorActiveColor: "#ffffff",
      },
      adList: [],
      discoverList: [],
      currentPage: 1,
      contact:false,
      pageNo:1,
      pageSize:5,
      totalPage:0,
      showLine: false,
      cityName:"定位中...",
      cityList:[],
      cityNameIdx:0,
      orgId:''
    };
    components = {
      discover: Discover
    };
    methods = {
      goSearch() {
        wepy.navigateTo({
          url: '/pages/search'
        });
      },
      goQrcode(){
        wepy.navigateTo({
          url: '/pages/qrcode'
        });
      },
      search(e){
        wepy.navigateTo({ url: `/pages/search?keyword=${e}&type=2` });
      },
      tapEvent(e) {
        let store = getStore();
        console.log('获取store= ', store.getState());
      },
      goToAdvert(e) {
        console.log('url',e)
        let url = `/pages/web-view?url=${e}`
        wepy.navigateTo({
          url: url
        });
      },
      onShareAppMessage() {
        return {
          title: '五星体育运动商城',
          path: '/pages/index',
          success: res => {
            console.log('res', res)
          },
          fail: () => {},
          complete: () => {}
        };
      },
      isCheckContact(){
        let contact = this.contact;
        if(!contact){
          return tip.toast({
            title: '微信版本太低，不支持客服功能',
            icon: 'none'
          })
        }
      },
      goOtherPorgram(type){
        const appIdArr = [{
          appId:"wx38557d1eb9f54bec",
          name:"联赛app"
        },{
          appId:"wx64520bbf28ce91ff",
          name: "五星官网"
        }];
        wx.navigateToMiniProgram({
          appId: appIdArr[type].appId,
          envVersion: 'release',
          success(res) {
            // 打开成功
            console.log('打开小程序',appIdArr[type].name)
          }
        })
      },
      bindCityChange(e){
        const idx= e.detail.value;
        this.cityNameIdx = idx;
        let orgId = this.cityList[idx].orgId;
        this.setCity(orgId);
      }
    };
    events = {};
    watch = {};
    computed = {};
    async onLoad() {
      await this.initCityList()
      await this.getLocationFun()
      let systemInfo = this.$parent.globalData.systemInfo;
      if (systemInfo) {
        this.windowHeight = systemInfo.windowHeight;
      }
      if (wx.canIUse('button.open-type.contact')) {
        this.contact = true
      }
      let userInfo = this.$parent.globalData.userInfo;
      if (!userInfo) {
        await this.$parent.getUserInfo()
      }
      this.$apply();
      await this.getAdList();
      await this.getDiscoverList({});
    };
    async onShow() {};
    onReachBottom() {
      let totalPage = this.totalPage;
      let pageNo = this.pageNo;
      if (totalPage > pageNo) {
        this.pageNo++;
        this.getDiscoverList({
          pageNo: this.pageNo,
          reach:true
        })
      } else {
        this.showLine=true;
      }
    };
    async getAdList() {
      let res = await api.categoryList({
        query:{
          method:'GetCarousels'
        },
        realUrl: true
      })
      if (res.code === 0 && res.data.length >0) {
        this.adList = res.data;
        this.$apply();
      }
      // let res = await api.getAdList()
      // if (res.code === 0 && res.data.length > 0) {
      //   this.adList = res.data;
      //   this.$apply();
      // }
    };
    async getDiscoverList({pageNo=1, pageSize=5,reach=false}) {
      let res = await api.courseHandle({
        query:{
          method:'GetRecommendProduct',
          pageNo:pageNo?pageNo:this.pageNo,
          pageSize:pageSize
        },
        realUrl: true
      })
      if (res.code === 0 && res.data) {
        let data = res.data;
        if (!data && data.list.length === 0) {
          return tip.toast({
            title: '没有查询到商品',
            icon: 'none'
          })
        }
        this.totalPage = Math.ceil(data.totle / pageSize);
        this.discoverList = reach?[...this.discoverList, ...data.list]:data.list;
        this.$apply();
      }else{
        return tip.toast({
          title: '没有查询到商品',
          icon: 'none'
        })
      }
      // let res = await api.getDiscover();
      // if (res.code === 0 && res.data.length > 0) {
      //   this.discoverList = res.data;
      //   this.$apply();
      // }
    };
    async initCityList(){
      let res = await api.sessionKey({
        query:{
          method:'GetArea'
        },
        method: 'GET',
        realUrl: true
      })
      if (res.code === 0 && res.data.length >0) {
        this.cityList = res.data;
        this.$apply();
      }else{
        tip.error(res.msg||'获取城市列表异常')
      }
    }
    getLocationFun(){
      wx.getSetting({
        success: (res) => {
          console.log(JSON.stringify(res))
          if (res.authSetting['scope.userLocation'] != undefined && res.authSetting['scope.userLocation'] != true) {
            wx.showModal({
              title: '请求授权当前位置',
              content: '需要获取您的地理位置，请确认授权',
              success: (res)=> {
                if (res.cancel) {
                  wx.showToast({
                    title: '拒绝授权',
                    icon: 'none',
                    duration: 1000
                  })
                } else if (res.confirm) {
                  wx.openSetting({
                    success: (dataAu)=> {
                      if (dataAu.authSetting["scope.userLocation"] == true) {
                        wx.showToast({
                          title: '授权成功',
                          icon: 'success',
                          duration: 1000
                        })
                        //再次授权，调用wx.getLocation的API
                        wx.getLocation({
                          type: 'wgs84',
                          success: (res)=> {
                            const latitude = res.latitude
                            const longitude = res.longitude
                            this.getCity({latitude,longitude})
                          }
                        })
                        
                      } else {
                        wx.showToast({
                          title: '授权失败',
                          icon: 'none',
                          duration: 1000
                        })
                      }
                    }
                  })
                }
              }
            })
          } else if (res.authSetting['scope.userLocation'] == undefined) {
            //调用wx.getLocation的API
            wx.getLocation({
              type: 'wgs84',
              success: (res)=> {
                const latitude = res.latitude
                const longitude = res.longitude
                this.getCity({latitude,longitude})
              }
            })
          }
          else {
            //调用wx.getLocation的API
            wx.getLocation({
              type: 'wgs84',
              success: (res)=> {
                const latitude = res.latitude
                const longitude = res.longitude
                this.getCity({latitude,longitude})
              }
            })
          }
        }
      })
    };
    getCity(point={}){
      const cityList = this.cityList;
      let now = new Date().getTime();
      let param={}
      let cityInfo = wepy.getStorageSync('cityInfo');
      // 小于12小时 cityInfo && (now-cityInfo.date<=43200000)
      if(cityList.length===0 || (cityInfo && (now-cityInfo.date<=43200000))){
        if(cityList.length!=0){
          let cityNameIdx= cityList.findIndex((item)=>{
            this.cityName='深圳';
            return item.orgName ==='深圳'
          })
          this.cityNameIdx = cityNameIdx || 0
        }
        return
      }
      console.log('-----',now-cityInfo.date)
      const qqmapsdk = new QQMapWX({
        key: 'FCFBZ-IHI3P-YKBDB-VSW5B-2JGQQ-H4BSP'
      })
      qqmapsdk.reverseGeocoder({
        location:point,
        success:(res)=>{
          const cityName = res.result.ad_info.city;
          this.cityName=cityName.includes('市')?cityName.slice(0,cityName.length-1):cityName;
          let cityNameIdx= cityList.findIndex((item)=>{
              if(item.orgName === this.cityName){
                param = Object.assign({},item,{'date': new Date().getTime()})
                console.log('1param',param)
                wepy.setStorageSync('cityInfo', param);
                return item.orgName === this.cityName
              }else{
                param = Object.assign({},item,{'date': new Date().getTime()})
                console.log('2param',param)
                wepy.setStorageSync('cityInfo', param);
                return item.orgName ==='深圳'
              }
              
          })
          this.cityNameIdx = cityNameIdx || 0
        },
        fail:(err)=>{
          let cityNameIdx= cityList.findIndex((item)=>{
              if(item.orgName === this.cityName){
                param = Object.assign({},item,{'date': new Date().getTime()})
                console.log('3param',param)
                wepy.setStorageSync('cityInfo', param);
                return item.orgName === this.cityName
              }else{
                param = Object.assign({},item,{'date': new Date().getTime()})
                console.log('4param',param)
                wepy.setStorageSync('cityInfo', param);
                return item.orgName ==='深圳'
              }
          })
          this.cityNameIdx = cityNameIdx || 0
        }

      })
    };
    async setCity(orgId){
      let res = await api.sessionKey({
        query:{
          method:'SetArea',
          orgId: orgId
        },
        method: 'GET',
        realUrl: true
      })
      if (res.code === 0) {
        await this.getAdList();
        await this.getDiscoverList({});
      }else{
        tip.error(res.msg||'获取城市列表异常')
      }
    }
  }
</script>

<style lang='less'>
  @import "../styles/color";
  .page-container {
    .crumbs {
      background-color: @bg-white;
      padding: 20rpx 20rpx 0;
    }
    .navigate{
      position: relative;
      image{
        background-color: transparent;
      }
      button {
        position: absolute;
        width: 100%;
        height: 100%;
        top: 0;
        left: 0;
        opacity: 0;
        text-align: center;
        line-height: 100%;
        z-index: 1;
      }
    }
  }
  .header-container{
    display: flex;
    align-content: center;
    background-color: @bg-white;
    padding-bottom: 20rpx;
    picker{
      view{
        padding-left: 28rpx;
      }
      i{
        margin-left: 10rpx;
        color: @color-default;
      }
    }
    .button{
      padding-left: 28rpx;
      font-size: 30rpx;
      font-weight: bold;
      height: 48rpx;
      line-height: 48rpx;
      background-color: @bg-white;
      i{
        margin-left: 10rpx;
        color: @color-default;
      }
    }
    .search-box{
      flex: 2;
    }
  }
  .search-box {
    background-color: @bg-white;
    padding: 0 20rpx 0;
    .search-content {
      display: flex;
      justify-content: center;
      text-align: center;
      align-items: center;
      border-radius: 30rpx;
      color: @color-3;
      margin: 0 auto;
      background: @bg-white;
      padding: 5rpx 12rpx;
      height: 38rpx;
      z-index: 22;
      border: 1px solid @color-3;
      .iconfont {
        font-size: 24rpx;
      }
      .iconfont,
      .placeholder {
        color: @color-3;
        line-height: 36rpx;
      }
    }
  }
  .icon-search {
    font-size: 32rpx;
    margin-right: 10rpx;
  }
  .swiper {
    height: 348rpx;
  }
  .slide-image {
    width: 100%;
    height: 100%;
  }
  .nav-list {
    background-color: @bg-white;
    display: flex;
    font-size: 26rpx;
    justify-content: space-between;
    flex-flow: row wrap; 
    padding: 20rpx 0;
    color: @color-9;;
    border-bottom: 1px solid @bg-d;
    .navigate {
      flex: 0 1 25%;
      text-align: center;
      margin: 20rpx auto;
      .nav-icon {
        height: 80rpx;
        margin: 0 auto;
        width: 80rpx;
        margin-bottom: 14rpx;
      }
      .nav-text {
        font-size: 26rpx
      }
    }
  }
    .bottom-line{
      text-align: center;
      color: @bg-d;
      height: 120rpx;
      line-height: 120rpx;
      padding-bottom: 14rpx;
      position: relative;
      display: flex;
      justify-content: center;
      align-items: center;
      text{
        display: block;
      }
      .dash{
        width: 120rpx;
        height: 2rpx;
        margin: 0 10rpx;
        background-color: @bg-gray;
      }
    }
</style>
