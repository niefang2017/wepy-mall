<!-- my 我的 -->
<template>
  <view class='user-container'>
    <view class="header row" wx:if="{{userInfo.nickName}}">
      <view class="img-box">
        <image class="head-img" src="{{userInfo.avatarUrl}}" lazy-load="true"></image>
      </view>
      <view class="h4 name">{{userInfo.nickName}}</view>
      <view class="qrcode-box" @tap="showQrcode"><i class="iconfont icon-erweima"></i></view>
    </view>
    <view class="grid row">
      <navigator class="item" url="/pages/order-list?type=-1">
        <i class="iconfont icon-wodedingdan"></i>
        <view class="h5">全部订单</view>
      </navigator>
      <navigator class="item" url="/pages/order-list?type=1">
        <i class="iconfont icon-dingdandaifukuan"></i>
        <view class="h5">待付款</view>
      </navigator>
      <navigator class="item" url="/pages/order-list?type=2">
        <i class="iconfont icon-daifahuo"></i>
        <view class="h5">待发货</view>
      </navigator>
      <navigator class="item" url="/pages/order-list?type=3" >
        <i class="iconfont icon-qianshou"></i>
        <view class="h5">待收货</view>
      </navigator>
      <navigator class="item" url="/pages/order-list?type=4" >
        <i class="iconfont icon-tuihuanhuo"></i>
        <view class="h5">退换货</view>
      </navigator>
    </view>
    <view class="row line">
      <!-- <view class="item" @tap="goMyCoupon">
        <view>
          <i class="iconfont icon-wodeyouhuiquan"></i>
          <view class="h5 text">优惠券</view>
        </view>
        <i class="iconfont icon-xiangyoujiantou"></i>
      </view> -->
      <navigator class="item" url="/pages/course-list">
        <view>
          <i class="iconfont icon-kecheng"></i>
          <view class="h5 text">个人课程</view>
        </view>
        <i class="iconfont icon-xiangyoujiantou"></i>
      </navigator>
      <navigator class="item"  url="/pages/mine-list">
        <view>
          <i class="iconfont icon-wodejuhuasuan"></i>
          <view class="h5 text">我的账号</view>
        </view>
        <i class="iconfont icon-xiangyoujiantou"></i>
      </navigator>
      <view class="item" @tap="openAddr">
        <view>
          <i class="iconfont icon-dizhi"></i>
          <view class="h5 text">地址管理</view>
        </view>
        <i class="iconfont icon-xiangyoujiantou"></i>
      </view>
      <navigator class="item" url="/pages/bank-card">
        <view>
          <i class="iconfont icon-iconfont5"></i>
          <view class="h5 text">银行卡绑定</view>
        </view>
        <i class="iconfont icon-xiangyoujiantou"></i>
      </navigator>
      <view class="item">
        <view>
          <i class="iconfont icon-xiaoxizhongxin"></i>
          <view class="h5 text">联系客服</view>
        </view>
        <i class="iconfont icon-xiangyoujiantou"></i>
        <button open-type="contact" class="button" @tap="isCheckContact"></button>
      </view>
      <view class="item" wx:if="{{feedback}}">
        <view>
          <i class="iconfont icon-yijianfankui"></i>
          <view class="h5 text">用户反馈</view>
        </view>
        <i class="iconfont icon-xiangyoujiantou"></i>
        <button open-type="feedback" class="button"></button>
      </view>
    </view>
    <view class="set-container" wx:if="{{openSettingStatus}}" style="min-height:{{windowHeight}}px">
      <view class="set-content">
        <view class="h5 text">需要授权获取您的地址</view>
        <button class="btn-red" open-type="openSetting">打开授权设置页</button>
      </view>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy';
  import {
    getStore,
    connect
  } from 'wepy-redux';
  import {
    UPDATE_AUTHOR_INFO
  } from '@/store/types/user'
  @connect({
    windowHeight(state) {
      return state.user.systemInfo.windowHeight
    }
  })
  export default class My extends wepy.page {
    config = {
      navigationBarTitleText: '个人中心',
    };
    data = {
      userInfo: {},
      feedback: false,
      openSettingStatus: false,
      contact:false
    };
    components = {};
    methods = {
      showQrcode(){
        wepy.navigateTo({
          url: `/pages/qrcode`
        });
        // let param={
        //   unionid:this.$parent.globalData.unionid,
        //   avatarUrl:this.userInfo.avatarUrl
        // }
        // this.$broadcast('show-qrcode',param)
      },
      toOrderList(e) {
        wepy.navigateTo({
          url: `/pages/order-list?type=${e}`
        });
      },
      openAddr(e) {
        wx.getSetting({
          success: (res) => {
            let authSetting = res.authSetting;
            if (res.authSetting['scope.address']) {
                wx.chooseAddress({
                  success: (ares) => {
                    wepy.setStorageSync('addressInfo', ares);
                    this.openSettingStatus = false
                    this.$apply();
                  }
                })
            }else{
              if(res.authSetting['scope.address']===false){
                wx.openSetting({
                  success(res){
                    console.log('打开设置',res.authSetting)
                  }
                })
              }else{
                wx.chooseAddress({
                  success: (ares) => {
                    wepy.setStorageSync('addressInfo', ares);
                    this.openSettingStatus = false
                    this.$apply();
                  },
                })
              }
            }
          }
        })
      },
      isCheckContact(){
        let contact = this.contact;
        if(!contact){
          return tip.toast({
            title: '微信版本太低，不支持客服功能',
            icon: 'none'
          })
        }
      }
    };
    events = {};
    watch = {};
    computed = {};
    async onLoad() {
      if (wx.canIUse('button.open-type.feedback')) {
        this.feedback = true
      }
      if (wx.canIUse('button.open-type.contact')) {
        this.contact = true
      }
      let userInfo = this.$parent.globalData.userInfo;
      if (userInfo) {
        this.userInfo = userInfo
      } else {
        await this.$parent.getUserInfo()
        let store = getStore()
        this.userInfo = store.getState().user.authorData
      }
      this.$apply()
    };
    async onShow() {
      /* let userInfo = this.$parent.globalData.userInfo;
      if (userInfo != '' || userInfo != null) {
        this.userInfo = userInfo
        this.$apply()
        // this.canvasInit();
      } else {
        getApp().userInfoCallback = res => {
          this.userInfo = userInfo
          // this.canvasInit();
          this.$apply()
        };
      } */
    };
    canvasInit(){
      drawQrcode({
        width: 200,
        height: 200,
        canvasId: 'myQrcode',
        text: this.$parent.globalData.unionid,
        image: {
          imageResource: this.userInfo.avatarUrl,
          dx: 70,
          dy: 70,
          dWidth: 60,
          dHeight: 60
        }
      })
      
    }
  }
</script>

<style lang='less'>
  @import "../styles/color";
  .navigator-hover {
    background-color: transparent;
  }
  .user-container {
    .row {
      background-color: #fff;
      padding: 26rpx;
      margin-top: 20rpx;
    }
    .header {
      display: flex;
      justify-content: flex-start;
      align-items: center;
      color: @color-white;
      background-color: @color-default;
      padding: 40rpx 26rpx;
      margin: 0 auto;
      position: relative;
      .img-box {
        width: 100rpx;
        height: 100rpx;
        .head-img {
          border-radius: 50%;
          width: 100rpx;
          height: 100rpx;
          margin: 0 auto;
        }
      }
      .name {
        padding-left: 20rpx;
      }
      .qrcode-box {
        position: absolute;
        right: 26rpx;
        top: 50%;
        width: 40rpx;
        height: 40rpx;
        line-height: 40rpx;
        margin-top: -20rpx;
        z-index: 2;
        i {
          font-size: 40rpx;
        }
      }
    }
    .line {
      padding: 0;
      .item {
        border-bottom: 1px solid @bg-gray;
        display: flex;
        justify-content: space-between;
        align-items: center;
        position: relative;
        text-align: center;
        padding: 26rpx 16rpx 26rpx 26rpx;
        i {
          font-size: 48rpx;
          display: block;
          &.icon-xiangyoujiantou {
            color: @color-9;
            font-size: 40rpx;
          }
        }
        view {
          display: flex;
          align-items: center;
          i {
            margin-right: 20rpx;
            margin-bottom: 0;
          }
        }
        button {
          position: absolute;
          width: 100%;
          height: 100%;
          top: 0;
          left: 0;
          opacity: 0;
          text-align: center;
          line-height: 100%;
          z-index: 1;
        }
      }
    }
    .grid {
      margin-top: 0;
      display: flex;
      justify-content: space-between;
      align-items: center; // flex-direction: row;
      // flex-wrap: wrap;
      // flex-flow: row wrap;
      .item {
        // width: 33.3333333%;
        // flex: 0 1 33.3333333%;
        position: relative;
        text-align: center;
        padding: 10rpx 0;
        i {
          font-size: 48rpx;
          display: block;
          margin-bottom: 20rpx;
        }
        button {
          position: absolute;
          width: 100%;
          height: 100%;
          top: 0;
          left: 0;
          opacity: 0;
          text-align: center;
          line-height: 100%;
          z-index: 1;
        }
      }
    }
    .set-container {
      bottom: 0;
      left: 0;
      width: 100%;
      // height: 200rpx;
      background-color: rgba(0, 0, 0, 0.5);
      z-index: 9999;
      position: fixed;
      display: flex;
      justify-content: center; 
      align-items: center;
      .set-content{
        background-color: @bg-white;
        width:640rpx;
        padding:26rpx;
        .text{
          margin-bottom: 26rpx;
          color: @color-9;
        }
      }
      .btn-red{
        width: 100%;
        color: @color-white;
        background-color: @color-default;
      }
    }
  }
</style>